image:
  name: registry.gitlab.com/gitlab-org/terraform-images/releases/0.12:latest
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

# Default output file for Terraform plan
variables:
  PLAN: plan.tfplan
  JSON_PLAN_FILE: tfplan.json
  TF_VERSION: 0.14.4 
  GO_VERSION: 1.12.14
  TEMPLATE: samples/webdata
  TEST_CASE: testWebData

cache:
  paths:
    - .terraform

before_script:
  - alias convert_report="jq -r '([.resource_changes[]?.change.actions?]|flatten)|{\"create\":(map(select(.==\"create\"))|length),\"update\":(map(select(.==\"update\"))|length),\"delete\":(map(select(.==\"delete\"))|length)}'"
  - terraform --version
  - terraform init

.install_tf_alpine: &install_tf_alpine
  before_script:
    - currdir=$(pwd)
    - cd /tmp
    - wget https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip -O terraform.zip
    - unzip terraform.zip -d /usr/bin
    - cd $currdir
    - /usr/bin/terraform version

.terraform_flow: &terraform_flow
  before_script:
    - terraform state replace-provider 'registry.terraform.io/-/azurerm' 'registry.terraform.io/hashicorp/azurerm'
    - cd $TEMPLATE
    - rm -rf .terraform
    - terraform init -upgrade -backend-config "storage_account_name=${TF_VAR_remote_state_account}" -backend-config "container_name=${TF_VAR_remote_state_container}"

stages:
  - validate
  - build
  - unit-test
  
include:
  - 'devops/premerge_pipeline/.tf-plan.yml'
  - 'devops/premerge_pipeline/.unit-test.yml'
  - 'devops/premerge_pipeline/.validate.yml'

validate:
  extends: .validate

cr-unit-test:
  extends: .unit-test

cr-plan:
  extends: .tf-plan

sr-unit-test:
  extends: .unit-test

sr-plan:
  extends: .tf-plan

dr-unit-test:
  extends: .unit-test

dr-plan:
  extends: .tf-plan
