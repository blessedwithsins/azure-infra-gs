# This file is a template, and might need editing before it works on your project.
# Official image for Hashicorp's Terraform. It uses light image which is Alpine
# based as it is much lighter.
#
# Entrypoint is also needed as image by default set `terraform` binary as an
# entrypoint.
image:
  name: registry.gitlab.com/gitlab-org/terraform-images/releases/0.12:latest
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

# Default output file for Terraform plan
variables:
  PLAN: plan.tfplan
  JSON_PLAN_FILE: tfplan.json
  TF_VERSION: 0.12.24
  GO_VERSION: 1.12.14
  TEMPLATE: samples/webdata
  TEST_CASE: testWebData

cache:
  paths:
    - .terraform

before_script:
  - alias convert_report="jq -r '([.resource_changes[]?.change.actions?]|flatten)|{\"create\":(map(select(.==\"create\"))|length),\"update\":(map(select(.==\"update\"))|length),\"delete\":(map(select(.==\"delete\"))|length)}'"
  - terraform --version
  - terraform init

.install_tf_alpine: &install_tf_alpine
  before_script:
    - currdir=$(pwd)
    - cd /tmp
    - wget https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip -O terraform.zip
    - unzip terraform.zip -d /usr/bin
    - cd $currdir
    - /usr/bin/terraform version

.terraform_flow: &terraform_flow
  before_script:
    - cd $TEMPLATE
    - rm -rf .terraform
    - terraform init -backend-config "storage_account_name=${TF_VAR_remote_state_account}" -backend-config "container_name=${TF_VAR_remote_state_container}"

include:
  - local: "tf-poc/.tf-plan.yml"

stages:
  - validate
  - central-resources
  - data-resources
  - service-resources

validate:
  stage: validate
  script:
    - terraform validate

cr-unit-test:
  <<: *install_tf_alpine
  stage: central-resources
  script:
    - echo "komakkar"

cr-terraform-plan:
  extends: .tf-plan
  stage: central-resources
  variables:
    TF_DIRECTORY: 'infra/templates/osdu-r3-mvp/central_resources'
    TF_WORKSPACE_NAME: 'idc-mvp-cr'
    PLAN: 'plan.tfplan'

data-unit-test:
  <<: *install_tf_alpine
  stage: data-resources
  script:
    - echo "komakkar"


dp-terraform-plan:
  extends: .tf-plan
  stage: data-resources
  variables:
    TF_DIRECTORY: 'infra/templates/osdu-r3-mvp/data_partition'
    TF_WORKSPACE_NAME: 'idc-mvp-dp1'
    PLAN: 'plan.tfplan'


sr-unit-test:
  <<: *install_tf_alpine
  stage: service-resources
  script:
    - echo "komakkar"


sr-terraform-plan:
  stage: service-resources
  before_script:
    - echo "Downloading pre-req files"
    - echo "${ssh_public_key_file}" > "infra/templates/osdu-r3-mvp/service_resources/ssh_public_key_file.pub"
    - echo "${gitops_ssh_key_file}" > "infra/templates/osdu-r3-mvp/service_resources/gitops_ssh_key_file.pem"

  extends: .tf-plan
  variables:
    TF_DIRECTORY: 'infra/templates/osdu-r3-mvp/service_resources'
    TF_WORKSPACE_NAME: 'idc-mvp-sr'
    TF_VAR_ssh_public_key_file: "ssh_public_key_file.pub"
    TF_VAR_gitops_ssh_key_file: "gitops_ssh_key_file.pem"
    PLAN: 'plan.tfplan'

