#  Copyright ï¿½ Microsoft Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

# This template is responsible for using an artifact docker image and pushing it to an ACR.
parameters:
  imageRepoName: ''
  environment: ''
  providerName: ''
  jarFilePath: ''
  artifactName: ''
  dockerFile: ''

steps:
  - task: AzureCLI@1
    displayName: 'Docker Build + ACR Push'
    condition: and(succeeded(), eq('${{ parameters.providerName }}', 'Azure'))
    env:
      JAR_FILE_PATH: ${{ parameters.jarFilePath }}
      IMAGE: $(CONTAINER_REGISTRY_NAME).azurecr.io/${{ parameters.imageRepoName }}-${{ parameters.environment }}:$(Build.SourceVersion)
      DOCKERFILE: ${{ parameters.dockerFile }}

    inputs:
      azureSubscription: '$(SERVICE_CONNECTION_NAME)'
      addSpnToEnvironment: true
      scriptLocation: inlineScript
      inlineScript: |
        #!/usr/bin/env bash
        set -euo pipefail

        function writeDockerFile() {
            echo 'VOLUME /tmp
                 ARG JAR_FILE
                 ENV JAVA_OPTS="-XX:InitialRAMPercentage=25.0 -XX:MaxRAMPercentage=50.0 -XX:+HeapDumpOnOutOfMemoryError ${JAVA_OPTS}"
                 COPY ${JAR_FILE} app.jar

                 ARG EXT_JAR_FILE
                 COPY ${EXT_JAR_FILE} chaos-monkey-spring-boot-2.4.6-SNAPSHOT-jar-with-dependencies.jar
                 ENV JAVA_CLASSPATH=/chaos-monkey-spring-boot-2.4.6-SNAPSHOT-jar-with-dependencies.jar

                 ARG EXT_PROP_FILE
                 COPY ${EXT_PROP_FILE} chaos.properties

                 CMD ["java","-cp","/app.jar","-Dloader.path=/chaos-monkey-spring-boot-2.4.6-SNAPSHOT-jar-with-dependencies.jar","org.springframework.boot.loader.PropertiesLauncher","--spring.profiles.active=chaos-monkey","--spring.config.import=file:///chaos.properties"]' > Dockerfile
        }

        curl -L https://aka.ms/acr/installaad/bash | /bin/bash
        echo "Logging in to the ACR Registry"
        echo "------------------------------------"
        az acr login -n $(CONTAINER_REGISTRY_NAME)

        if [[ ! ${DOCKERFILE} ]]; then
          writeDockerFile
        else
          cp ${{ parameters.artifactName }}/${DOCKERFILE} Dockerfile
        fi

        jar_file_name=$(basename $JAR_FILE_PATH)
        cp $JAR_FILE_PATH .

        echo "Tagging and Pushing $IMAGE to ACR for JAR $jar_file_name from $JAR_FILE_PATH"
        echo "------------------------------------"
        docker build --build-arg JAR_FILE=./$jar_file_name -t $IMAGE .

        docker push $IMAGE
        echo "Show recent tags of repository ${{ parameters.imageRepoName }}"
        az acr repository show-tags -n $(CONTAINER_REGISTRY_NAME) --repository ${{ parameters.imageRepoName }}-${{ parameters.environment }} --top 10 --orderby time_desc
