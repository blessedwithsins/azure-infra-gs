#  Copyright Â© Microsoft Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

steps:
  - task: Bash@3
    name: GenerateHelmTemplate
    displayName: Helm Template
    env:
      CHART_PATH: ${{parameters.chartPath}}
      VALUES_FILE: ${{parameters.valuesFile}}
      SERVICE_NAME: ${{parameters.serviceName}}
      GENERATION_PATH: ${{parameters.generationPath}}
      BRANCH: $(Build.SourceBranchName)
      TAG: $(Build.SourceVersion)
    inputs:
      targetType: 'inline'
      script: |
        #!/usr/bin/env bash

          echo "Helm Source: $(HELM_SOURCE)"
          echo "Build Trigger Repo Name: $(Build.Repository.Name)"

          if [[ "$(HELM_SOURCE)" != "" ]]
          then
              HELM_SOURCE_NAME=$(HELM_SOURCE)
          else
              HELM_SOURCE_NAME=$(Build.Repository.Name)
          fi

          echo "Helm Source Name: $HELM_SOURCE_NAME"
          cd $(Build.SourcesDirectory)/$HELM_SOURCE_NAME

          mkdir $CHART_PATH/$GENERATION_PATH
          cat $(Build.SourcesDirectory)/$HELM_SOURCE_NAME/${{parameters.chartPath}}/values.yaml

          echo "Extracting Manifest"
          helm template $SERVICE_NAME $CHART_PATH -f $(Build.SourcesDirectory)/$HELM_SOURCE_NAME/${{parameters.chartPath}}/values.yaml --output-dir $CHART_PATH/$GENERATION_PATH

          if [[ "${{parameters.chartModificationScript}}" != "" ]]
          then
            echo "Updating generated charts with the script ${{parameters.chartModificationScript}}"
            chmod -fR 755 $(Build.SourcesDirectory)/$HELM_SOURCE_NAME/${{parameters.chartPath}}/${{parameters.chartModificationScript}}

            pip install -U PyYAML

            touch tempFile

            for file in `find $CHART_PATH/$GENERATION_PATH -name '*.yaml'`; do
               cat $file | $(Build.SourcesDirectory)/$HELM_SOURCE_NAME/${{parameters.chartPath}}/${{parameters.chartModificationScript}} > tempFile
               cat tempFile > $file
            done

            rm tempFile
          fi