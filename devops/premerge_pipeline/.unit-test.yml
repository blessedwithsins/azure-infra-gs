.service_variables: &service_variables
  script:
    - echo "Downloading pre-req files"
    - echo "${ssh_public_key_file}" > "infra/templates/osdu-r3-mvp/service_resources/ssh_public_key_file.pub"
    - echo "${gitops_ssh_key_file}" > "infra/templates/osdu-r3-mvp/service_resources/gitops_ssh_key_file.pem"
    - export TF_VAR_ssh_public_key_file="ssh_public_key_file.pub"
    - export TF_VAR_gitops_ssh_url="gitops_ssh_key_file.pem"
    - export TF_VAR_gitops_ssh_key_file=""

.install_tf_alpine: &install_tf_alpine
  before_script:
    - currdir=$(pwd)
    - cd /tmp
    - wget https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
    - unzip terraform_${TF_VERSION}_linux_amd64.zip -d /usr/bin
    - cd $currdir
    - /usr/bin/terraform version

.unit-test:
    extends:
        - .install_tf_alpine
        - .service_variables
    variables:
        TEST_SUITE_NAME: ""
    stage: unit-test
    image:
        name: "golang:${GO_VERSION}-alpine"
        entrypoint:
        - "/usr/bin/env"
        - "PATH=/go/bin:/usr/local/go/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    script:
        - currdir=$(pwd)
        - apk add --no-cache gcc libc-dev bind-tools git
        - go get -u -d github.com/magefile/mage
        - magedir=$(find /go/pkg/mod/ -name magefile -type d | grep -v cache)
        - cd $magedir/$(ls $magedir/)
        - go run bootstrap.go
        - cd $currdir/infra
        - mage ${TEST_SUITE_NAME}
